name: Build .deb

on: [push]

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # tag_name: ${{ github.ref }}
          tag_name: v6.0.6-alpha
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
  build:
    needs: create_release # we need to know the upload URL
    runs-on: ${{ matrix.config.os }} # we run many different builds
    strategy:
      matrix:
        config:
          - os: ubuntu-latest
          - os: macos-latest
          # - os: windows-latest
    steps:
      - uses: actions/checkout@v2
      - run: npm install -g caxa
      - run: npm install . --production
      - run: curl -sf https://gobinaries.com/tj/node-prune | sh && node-prune
      - run: npx caxa --input . --output ghost-inspector-${{ matrix.config.os }}  -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/bin/ghost-inspector"
      - run: ls -l
      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          # This is how it will be named on the release page. Put hatever name
          # you like, remember that they need to be different for each platform.
          # You can choose any build matrix parameters. For Rust I use the
          # target triple.
          asset_name: ghost-inspector-${{ matrix.config.os }}
          # The path to the file you want to upload.
          asset_path: ./ghost-inspector-${{ matrix.config.os }}
          # probably you will need to change it, but most likely you are
          # uploading a binary file
          asset_content_type: application/octet-stream

